{
    "swagger": "2.0",
    "info": {
        "description": "This is an API for the Care-Wallet App.",
        "title": "Care-Wallet API",
        "contact": {},
        "version": "1.0"
    },
    "basePath": "/",
    "paths": {
        "/files/profile/{fileName}": {
            "get": {
                "description": "get profile photo from S3 bucket",
                "tags": [
                    "file"
                ],
                "summary": "get profile photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the file name of the profile photo",
                        "name": "fileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files/upload": {
            "post": {
                "description": "Upload a file to database and S3 bucket",
                "tags": [
                    "file"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Body with file zip",
                        "name": "file_data",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The userId of the uploader",
                        "name": "upload_by",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The groupId of the uploader",
                        "name": "group_id",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Notes for the file",
                        "name": "notes",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Label name for the file",
                        "name": "label_name",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.File"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files/{groupId}": {
            "get": {
                "description": "List all files from S3 bucket",
                "tags": [
                    "file"
                ],
                "summary": "List all files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The groupID of the file",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/files.FileDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/files/{groupId}/{fileName}": {
            "get": {
                "description": "Get a file from S3 bucket",
                "tags": [
                    "file"
                ],
                "summary": "Get a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The groupID of the file",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The fileId of the file",
                        "name": "fileId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a file from S3 bucket",
                "tags": [
                    "file"
                ],
                "summary": "Remove a file",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The groupID of the file",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "The fileName of the file",
                        "name": "fileName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/create/{groupName}": {
            "post": {
                "description": "Creates a new care group with the provided group name.",
                "tags": [
                    "group"
                ],
                "summary": "Creates a care group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group name",
                        "name": "groupName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    }
                }
            }
        },
        "/group/member/{uid}": {
            "get": {
                "description": "get the group id from the user id",
                "tags": [
                    "group"
                ],
                "summary": "Retrieve a group id given a user id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/{groupId}": {
            "get": {
                "description": "retrieve the information about a group given its group id",
                "tags": [
                    "group"
                ],
                "summary": "Get a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group id",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CareGroup"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/{groupId}/add": {
            "post": {
                "description": "Adds a user to a care group given a userID, groupID, and role",
                "tags": [
                    "group"
                ],
                "summary": "Adds a user to a care group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "group id",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The group member to be added",
                        "name": "GroupMember",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/groups.GroupMember"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/{groupId}/labels": {
            "get": {
                "description": "get all labels for a group given their group id",
                "tags": [
                    "labels"
                ],
                "summary": "get labels for a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "the group id to get labels for",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Label"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "create a new label for a group",
                "tags": [
                    "labels"
                ],
                "summary": "Create A New Label",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group to create label for",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Label creation data",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/labels.LabelData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Label"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/{groupId}/labels/{lname}": {
            "delete": {
                "description": "delete a label",
                "tags": [
                    "labels"
                ],
                "summary": "Delete A Label",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group to delete label from",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of label to delete",
                        "name": "lname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "edit a label",
                "tags": [
                    "labels"
                ],
                "summary": "Edit A Label",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Group of label to edit",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of label to edit",
                        "name": "lname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Label edit data",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/labels.LabelData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Label"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/{groupId}/roles": {
            "get": {
                "description": "get all group members for a group given group id from the db",
                "tags": [
                    "group"
                ],
                "summary": "Get all members of a group",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "group id",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.GroupRole"
                            }
                        }
                    }
                }
            }
        },
        "/group/{groupId}/{uid}": {
            "delete": {
                "description": "removes a user from a group given a group id and user id",
                "tags": [
                    "group"
                ],
                "summary": "Remove a user from a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "groupId",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GroupRole"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/group/{groupId}/{uid}/{role}": {
            "put": {
                "description": "add a user to a group given a user id and group id and role",
                "tags": [
                    "group"
                ],
                "summary": "Add a user to a group",
                "parameters": [
                    {
                        "type": "string",
                        "description": "groupId",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Group\tRole",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GroupRole"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "Change a user group role based off of group id and user id and role",
                "tags": [
                    "group"
                ],
                "summary": "Change a user group role",
                "parameters": [
                    {
                        "type": "string",
                        "description": "groupId",
                        "name": "groupId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "userId",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "New User Group Role",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "post": {
                "description": "Create a new task",
                "tags": [
                    "tasks"
                ],
                "summary": "Create a New Task",
                "parameters": [
                    {
                        "description": "Create Task Request",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasks.TaskBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                }
            }
        },
        "/tasks/assigned": {
            "get": {
                "description": "get tasks assigned to given users",
                "tags": [
                    "tasks"
                ],
                "summary": "Get Tasks Assigned To Given Users",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "userIDs",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/filtered": {
            "get": {
                "description": "get filtered tasks",
                "tags": [
                    "tasks"
                ],
                "summary": "Get Filtered Tasks",
                "parameters": [
                    {
                        "type": "string",
                        "name": "createdBy",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "endDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "groupID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "quickTask",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "startDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "taskID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "taskStatus",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "taskTitle",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "taskType",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/labels/tasks": {
            "get": {
                "description": "gets the information about multiple labals given their task id",
                "tags": [
                    "task labels"
                ],
                "summary": "gets the information about multiple labels",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "Task IDs",
                        "name": "taskIDs",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task_Label"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/{tid}": {
            "get": {
                "description": "get a task given its id",
                "tags": [
                    "tasks"
                ],
                "summary": "get task by id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "the id of the task",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update the task_info field of a task by ID",
                "tags": [
                    "tasks"
                ],
                "summary": "Update Task Info",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Task Info Request",
                        "name": "request_body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasks.TaskBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated Task",
                        "schema": {
                            "$ref": "#/definitions/models.Task"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a task by ID",
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tasks/{tid}/assign": {
            "post": {
                "description": "assign users to task",
                "tags": [
                    "tasks"
                ],
                "summary": "Assign Users To Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID to assign users to",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Users to assign to task and assignee",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasks.Assignment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TaskUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/{tid}/assigned": {
            "get": {
                "description": "Get list of users assigned to a task by task ID",
                "tags": [
                    "tasks"
                ],
                "summary": "Get list of users assigned to a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user IDs assigned to the task",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/{tid}/labels": {
            "get": {
                "description": "get a tasks labels given the task id",
                "tags": [
                    "task labels"
                ],
                "summary": "get a tasks labels",
                "parameters": [
                    {
                        "type": "string",
                        "description": "the task id to get labels for",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task_Label"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "add a label to a task given the task id, group id, and label name",
                "tags": [
                    "task labels"
                ],
                "summary": "add a label to a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "the task id to add the label to",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The label data to add to the task",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/task_labels.LabelData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Task_Label"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "remove a label from a task given the task id, group id, and label name",
                "tags": [
                    "task labels"
                ],
                "summary": "remove a label from a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "the task id to get labels for",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "The label data to remove from the task",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/task_labels.LabelData"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/{tid}/remove": {
            "delete": {
                "description": "remove users from task",
                "tags": [
                    "tasks"
                ],
                "summary": "Remove Users From Task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID to remove users from",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Users to remove from task",
                        "name": "_",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/tasks.Removal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TaskUser"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/{tid}/status/{status}": {
            "get": {
                "description": "Get list of users assigned to a task by task ID",
                "tags": [
                    "tasks"
                ],
                "summary": "Get list of users assigned to a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "tid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Task Status",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "gets the information about multiple users given their user id",
                "tags": [
                    "user"
                ],
                "summary": "gets the information about multiple users",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "User IDs",
                        "name": "userIDs",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.User"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/user/{uid}": {
            "get": {
                "description": "gets the information about a user given their user id",
                "tags": [
                    "user"
                ],
                "summary": "gets the information about a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a user with the provided userId given the updated user.",
                "tags": [
                    "user"
                ],
                "summary": "Updates a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Information",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserInfoBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new user with the provided userId.",
                "tags": [
                    "user"
                ],
                "summary": "Creates a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "uid",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Information",
                        "name": "UserInfo",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UserInfoBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "files.FileDetails": {
            "type": "object",
            "properties": {
                "fileId": {
                    "type": "integer"
                },
                "fileName": {
                    "type": "string"
                },
                "labelName": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "groups.GroupMember": {
            "type": "object",
            "properties": {
                "role": {
                    "$ref": "#/definitions/models.Role"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "labels.LabelData": {
            "type": "object",
            "properties": {
                "label_color": {
                    "type": "string"
                },
                "label_name": {
                    "type": "string"
                }
            }
        },
        "models.CareGroup": {
            "type": "object",
            "properties": {
                "date_created": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                }
            }
        },
        "models.File": {
            "type": "object",
            "properties": {
                "file_id": {
                    "type": "integer"
                },
                "file_name": {
                    "type": "string"
                },
                "file_size": {
                    "type": "integer"
                },
                "group_id": {
                    "type": "integer"
                },
                "label_name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "task_id": {
                    "type": "integer"
                },
                "upload_by": {
                    "type": "string"
                },
                "upload_date": {
                    "type": "string"
                }
            }
        },
        "models.GroupRole": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "role": {
                    "$ref": "#/definitions/models.Role"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "models.Label": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "label_color": {
                    "type": "string"
                },
                "label_name": {
                    "type": "string"
                }
            }
        },
        "models.Role": {
            "type": "string",
            "enum": [
                "PATIENT",
                "PRIMARY",
                "SECONDARY"
            ],
            "x-enum-varnames": [
                "RolePatient",
                "RolePrimary",
                "RoleSecondary"
            ]
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "created_by": {
                    "description": "User ID",
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "quick_task": {
                    "type": "boolean"
                },
                "repeating": {
                    "type": "boolean"
                },
                "repeating_end_date": {
                    "type": "string"
                },
                "repeating_interval": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "task_id": {
                    "type": "integer"
                },
                "task_info": {
                    "type": "string"
                },
                "task_status": {
                    "type": "string"
                },
                "task_title": {
                    "type": "string"
                },
                "task_type": {
                    "type": "string"
                }
            }
        },
        "models.TaskUser": {
            "type": "object",
            "properties": {
                "taskID": {
                    "type": "integer"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.Task_Label": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "label_name": {
                    "type": "string"
                },
                "task_id": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "device_id": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile_picture": {
                    "type": "string"
                },
                "push_notification_enabled": {
                    "type": "boolean"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "task_labels.LabelData": {
            "type": "object",
            "properties": {
                "group_id": {
                    "type": "integer"
                },
                "label_name": {
                    "type": "string"
                }
            }
        },
        "tasks.Assignment": {
            "type": "object",
            "properties": {
                "assigner": {
                    "type": "string"
                },
                "userIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "tasks.Removal": {
            "type": "object",
            "properties": {
                "userIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "tasks.TaskBody": {
            "type": "object",
            "properties": {
                "created_by": {
                    "description": "User ID",
                    "type": "string"
                },
                "created_date": {
                    "type": "string"
                },
                "end_date": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "notes": {
                    "type": "string"
                },
                "quick_task": {
                    "type": "boolean"
                },
                "repeating": {
                    "type": "boolean"
                },
                "repeating_end_date": {
                    "type": "string"
                },
                "repeating_interval": {
                    "type": "string"
                },
                "start_date": {
                    "type": "string"
                },
                "task_info": {
                    "type": "string"
                },
                "task_status": {
                    "type": "string"
                },
                "task_type": {
                    "type": "string"
                }
            }
        },
        "user.UserInfoBody": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        }
    }
}